// Code generated by protoc-gen-go. DO NOT EDIT.
// source: router.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Kyle struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Kyle) Reset()         { *m = Kyle{} }
func (m *Kyle) String() string { return proto.CompactTextString(m) }
func (*Kyle) ProtoMessage()    {}
func (*Kyle) Descriptor() ([]byte, []int) {
	return fileDescriptor_367072455c71aedc, []int{0}
}

func (m *Kyle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Kyle.Unmarshal(m, b)
}
func (m *Kyle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Kyle.Marshal(b, m, deterministic)
}
func (m *Kyle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Kyle.Merge(m, src)
}
func (m *Kyle) XXX_Size() int {
	return xxx_messageInfo_Kyle.Size(m)
}
func (m *Kyle) XXX_DiscardUnknown() {
	xxx_messageInfo_Kyle.DiscardUnknown(m)
}

var xxx_messageInfo_Kyle proto.InternalMessageInfo

func (m *Kyle) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Kyle) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Message struct {
	Sender               *Kyle    `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Body                 string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_367072455c71aedc, []int{1}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetSender() *Kyle {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Message) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type ListenRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListenRequest) Reset()         { *m = ListenRequest{} }
func (m *ListenRequest) String() string { return proto.CompactTextString(m) }
func (*ListenRequest) ProtoMessage()    {}
func (*ListenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_367072455c71aedc, []int{2}
}

func (m *ListenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenRequest.Unmarshal(m, b)
}
func (m *ListenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenRequest.Marshal(b, m, deterministic)
}
func (m *ListenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenRequest.Merge(m, src)
}
func (m *ListenRequest) XXX_Size() int {
	return xxx_messageInfo_ListenRequest.Size(m)
}
func (m *ListenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListenRequest proto.InternalMessageInfo

type SendRequest struct {
	Destination          *Kyle    `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	Body                 string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendRequest) Reset()         { *m = SendRequest{} }
func (m *SendRequest) String() string { return proto.CompactTextString(m) }
func (*SendRequest) ProtoMessage()    {}
func (*SendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_367072455c71aedc, []int{3}
}

func (m *SendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendRequest.Unmarshal(m, b)
}
func (m *SendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendRequest.Marshal(b, m, deterministic)
}
func (m *SendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendRequest.Merge(m, src)
}
func (m *SendRequest) XXX_Size() int {
	return xxx_messageInfo_SendRequest.Size(m)
}
func (m *SendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendRequest proto.InternalMessageInfo

func (m *SendRequest) GetDestination() *Kyle {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *SendRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type SendResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendResponse) Reset()         { *m = SendResponse{} }
func (m *SendResponse) String() string { return proto.CompactTextString(m) }
func (*SendResponse) ProtoMessage()    {}
func (*SendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_367072455c71aedc, []int{4}
}

func (m *SendResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendResponse.Unmarshal(m, b)
}
func (m *SendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendResponse.Marshal(b, m, deterministic)
}
func (m *SendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendResponse.Merge(m, src)
}
func (m *SendResponse) XXX_Size() int {
	return xxx_messageInfo_SendResponse.Size(m)
}
func (m *SendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Kyle)(nil), "mee6aas.zeep.router.v1.Kyle")
	proto.RegisterType((*Message)(nil), "mee6aas.zeep.router.v1.Message")
	proto.RegisterType((*ListenRequest)(nil), "mee6aas.zeep.router.v1.ListenRequest")
	proto.RegisterType((*SendRequest)(nil), "mee6aas.zeep.router.v1.SendRequest")
	proto.RegisterType((*SendResponse)(nil), "mee6aas.zeep.router.v1.SendResponse")
}

func init() { proto.RegisterFile("router.proto", fileDescriptor_367072455c71aedc) }

var fileDescriptor_367072455c71aedc = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x69, 0x29, 0x15, 0x5f, 0xb7, 0x09, 0xef, 0x20, 0x63, 0x08, 0x4a, 0x55, 0x10, 0x0f,
	0xc5, 0x4d, 0xf1, 0xe8, 0xc1, 0xab, 0x7a, 0xb0, 0xbd, 0x79, 0xcb, 0xcc, 0x1f, 0x09, 0xb8, 0xa4,
	0x26, 0x59, 0x61, 0x7e, 0x30, 0x3f, 0x9f, 0x34, 0xad, 0x30, 0x61, 0x15, 0x6f, 0x2f, 0xc9, 0xff,
	0xfd, 0x7e, 0x2f, 0x09, 0x8d, 0xac, 0x59, 0x7b, 0xd8, 0xa2, 0xb6, 0xc6, 0x1b, 0x3e, 0x5c, 0x01,
	0xb7, 0x42, 0xb8, 0xe2, 0x13, 0xa8, 0x8b, 0xfe, 0xa8, 0x99, 0xe7, 0x97, 0x94, 0x3c, 0x6c, 0xde,
	0xc1, 0x13, 0x8a, 0x95, 0x9c, 0x46, 0x27, 0xd1, 0xc5, 0x7e, 0x19, 0x2b, 0xc9, 0x4c, 0x89, 0x16,
	0x2b, 0x4c, 0xe3, 0xb0, 0x13, 0xea, 0xbc, 0xa2, 0xbd, 0x27, 0x38, 0x27, 0xde, 0xc0, 0x37, 0x94,
	0x3a, 0x68, 0x09, 0x1b, 0x5a, 0xb2, 0xc5, 0x51, 0xb1, 0x9b, 0x5f, 0xb4, 0xf0, 0xb2, 0xcf, 0xb6,
	0xd0, 0xa5, 0x91, 0x9b, 0x1f, 0x68, 0x5b, 0xe7, 0x07, 0x34, 0x7e, 0x54, 0xce, 0x43, 0x97, 0xf8,
	0x58, 0xc3, 0xf9, 0x5c, 0x50, 0x56, 0x41, 0xcb, 0x7e, 0xc9, 0x77, 0x94, 0x49, 0x38, 0xaf, 0xb4,
	0xf0, 0xca, 0xe8, 0x7f, 0xe9, 0xb6, 0x1b, 0x76, 0x3a, 0x27, 0x34, 0xea, 0x14, 0xae, 0x36, 0xda,
	0x61, 0xf1, 0x15, 0xd1, 0xb8, 0x0c, 0x8c, 0x0a, 0xb6, 0x51, 0xaf, 0xe0, 0x92, 0xd2, 0x6e, 0x2a,
	0x3e, 0x1f, 0x52, 0xfd, 0x9a, 0x7a, 0x76, 0x3c, 0x14, 0xeb, 0x5f, 0xec, 0x2a, 0xe2, 0x67, 0x4a,
	0x5a, 0x2b, 0x9f, 0x0e, 0x45, 0xb7, 0xae, 0x3d, 0x3b, 0xfb, 0x3b, 0xd4, 0x0d, 0x7e, 0x9f, 0xbc,
	0xc4, 0xcd, 0x7c, 0x99, 0x86, 0x2f, 0xbe, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x96, 0x39, 0xcc,
	0x7e, 0xf2, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RouterServiceClient is the client API for RouterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RouterServiceClient interface {
	Listen(ctx context.Context, in *ListenRequest, opts ...grpc.CallOption) (RouterService_ListenClient, error)
	Send(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendResponse, error)
}

type routerServiceClient struct {
	cc *grpc.ClientConn
}

func NewRouterServiceClient(cc *grpc.ClientConn) RouterServiceClient {
	return &routerServiceClient{cc}
}

func (c *routerServiceClient) Listen(ctx context.Context, in *ListenRequest, opts ...grpc.CallOption) (RouterService_ListenClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RouterService_serviceDesc.Streams[0], "/mee6aas.zeep.router.v1.RouterService/Listen", opts...)
	if err != nil {
		return nil, err
	}
	x := &routerServiceListenClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RouterService_ListenClient interface {
	Recv() (*Message, error)
	grpc.ClientStream
}

type routerServiceListenClient struct {
	grpc.ClientStream
}

func (x *routerServiceListenClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *routerServiceClient) Send(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendResponse, error) {
	out := new(SendResponse)
	err := c.cc.Invoke(ctx, "/mee6aas.zeep.router.v1.RouterService/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RouterServiceServer is the server API for RouterService service.
type RouterServiceServer interface {
	Listen(*ListenRequest, RouterService_ListenServer) error
	Send(context.Context, *SendRequest) (*SendResponse, error)
}

// UnimplementedRouterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRouterServiceServer struct {
}

func (*UnimplementedRouterServiceServer) Listen(req *ListenRequest, srv RouterService_ListenServer) error {
	return status.Errorf(codes.Unimplemented, "method Listen not implemented")
}
func (*UnimplementedRouterServiceServer) Send(ctx context.Context, req *SendRequest) (*SendResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}

func RegisterRouterServiceServer(s *grpc.Server, srv RouterServiceServer) {
	s.RegisterService(&_RouterService_serviceDesc, srv)
}

func _RouterService_Listen_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListenRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RouterServiceServer).Listen(m, &routerServiceListenServer{stream})
}

type RouterService_ListenServer interface {
	Send(*Message) error
	grpc.ServerStream
}

type routerServiceListenServer struct {
	grpc.ServerStream
}

func (x *routerServiceListenServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func _RouterService_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouterServiceServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mee6aas.zeep.router.v1.RouterService/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouterServiceServer).Send(ctx, req.(*SendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RouterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mee6aas.zeep.router.v1.RouterService",
	HandlerType: (*RouterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _RouterService_Send_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Listen",
			Handler:       _RouterService_Listen_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "router.proto",
}
